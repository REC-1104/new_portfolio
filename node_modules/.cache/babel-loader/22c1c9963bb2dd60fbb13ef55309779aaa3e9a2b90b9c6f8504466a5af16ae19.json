{"ast":null,"code":"import _slicedToArray from \"C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createClass from \"C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { version } from '../helpers/constants.js';\nvar opaque_fragment = version >= 154 ? 'opaque_fragment' : 'output_fragment';\nvar PointMaterialImpl = /*#__PURE__*/function (_THREE$PointsMaterial) {\n  _inherits(PointMaterialImpl, _THREE$PointsMaterial);\n  var _super = _createSuper(PointMaterialImpl);\n  function PointMaterialImpl(props) {\n    var _this;\n    _classCallCheck(this, PointMaterialImpl);\n    _this = _super.call(this, props);\n    _this.onBeforeCompile = function (shader, renderer) {\n      var isWebGL2 = renderer.capabilities.isWebGL2;\n      shader.fragmentShader = shader.fragmentShader.replace(\"#include <\".concat(opaque_fragment, \">\"), \"\\n        \".concat(!isWebGL2 ? \"#extension GL_OES_standard_derivatives : enable\\n#include <\".concat(opaque_fragment, \">\") : \"#include <\".concat(opaque_fragment, \">\"), \"\\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\\n      float r = dot(cxy, cxy);\\n      float delta = fwidth(r);     \\n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\\n      #include <tonemapping_fragment>\\n      #include <\").concat(version >= 154 ? 'colorspace_fragment' : 'encodings_fragment', \">\\n      \"));\n    };\n    return _this;\n  }\n  return _createClass(PointMaterialImpl);\n}(THREE.PointsMaterial);\nvar PointMaterial = /*@__PURE__*/React.forwardRef(function (props, ref) {\n  var _React$useState = React.useState(function () {\n      return new PointMaterialImpl(null);\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    material = _React$useState2[0];\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({}, props, {\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }));\n});\nexport { PointMaterial, PointMaterialImpl };","map":{"version":3,"names":["_extends","THREE","React","version","opaque_fragment","PointMaterialImpl","_THREE$PointsMaterial","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","onBeforeCompile","shader","renderer","isWebGL2","capabilities","fragmentShader","replace","concat","_createClass","PointsMaterial","PointMaterial","forwardRef","ref","_React$useState","useState","_React$useState2","_slicedToArray","material","createElement","object","attach"],"sources":["C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@react-three/drei/core/PointMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { version } from '../helpers/constants.js';\n\nconst opaque_fragment = version >= 154 ? 'opaque_fragment' : 'output_fragment';\nclass PointMaterialImpl extends THREE.PointsMaterial {\n  constructor(props) {\n    super(props);\n    this.onBeforeCompile = (shader, renderer) => {\n      const {\n        isWebGL2\n      } = renderer.capabilities;\n      shader.fragmentShader = shader.fragmentShader.replace(`#include <${opaque_fragment}>`, `\n        ${!isWebGL2 ? `#extension GL_OES_standard_derivatives : enable\\n#include <${opaque_fragment}>` : `#include <${opaque_fragment}>`}\n      vec2 cxy = 2.0 * gl_PointCoord - 1.0;\n      float r = dot(cxy, cxy);\n      float delta = fwidth(r);     \n      float mask = 1.0 - smoothstep(1.0 - delta, 1.0 + delta, r);\n      gl_FragColor = vec4(gl_FragColor.rgb, mask * gl_FragColor.a );\n      #include <tonemapping_fragment>\n      #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n      `);\n    };\n  }\n}\nconst PointMaterial = /*@__PURE__*/React.forwardRef((props, ref) => {\n  const [material] = React.useState(() => new PointMaterialImpl(null));\n  return /*#__PURE__*/React.createElement(\"primitive\", _extends({}, props, {\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }));\n});\n\nexport { PointMaterial, PointMaterialImpl };\n"],"mappings":";;;;;AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,OAAO,QAAQ,yBAAyB;AAEjD,IAAMC,eAAe,GAAGD,OAAO,IAAI,GAAG,GAAG,iBAAiB,GAAG,iBAAiB;AAAC,IACzEE,iBAAiB,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,iBAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,iBAAA;EACrB,SAAAA,kBAAYK,KAAK,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAP,iBAAA;IACjBM,KAAA,GAAAH,MAAA,CAAAK,IAAA,OAAMH,KAAK;IACXC,KAAA,CAAKG,eAAe,GAAG,UAACC,MAAM,EAAEC,QAAQ,EAAK;MAC3C,IACEC,QAAQ,GACND,QAAQ,CAACE,YAAY,CADvBD,QAAQ;MAEVF,MAAM,CAACI,cAAc,GAAGJ,MAAM,CAACI,cAAc,CAACC,OAAO,cAAAC,MAAA,CAAcjB,eAAe,qBAAAiB,MAAA,CAC9E,CAACJ,QAAQ,iEAAAI,MAAA,CAAiEjB,eAAe,sBAAAiB,MAAA,CAAmBjB,eAAe,MAAG,0TAAAiB,MAAA,CAOtHlB,OAAO,IAAI,GAAG,GAAG,qBAAqB,GAAG,oBAAoB,cACxE,CAAC;IACJ,CAAC;IAAC,OAAAQ,KAAA;EACJ;EAAC,OAAAW,YAAA,CAAAjB,iBAAA;AAAA,EAlB6BJ,KAAK,CAACsB,cAAc;AAoBpD,IAAMC,aAAa,GAAG,aAAatB,KAAK,CAACuB,UAAU,CAAC,UAACf,KAAK,EAAEgB,GAAG,EAAK;EAClE,IAAAC,eAAA,GAAmBzB,KAAK,CAAC0B,QAAQ,CAAC;MAAA,OAAM,IAAIvB,iBAAiB,CAAC,IAAI,CAAC;IAAA,EAAC;IAAAwB,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA7DI,QAAQ,GAAAF,gBAAA;EACf,OAAO,aAAa3B,KAAK,CAAC8B,aAAa,CAAC,WAAW,EAAEhC,QAAQ,CAAC,CAAC,CAAC,EAAEU,KAAK,EAAE;IACvEuB,MAAM,EAAEF,QAAQ;IAChBL,GAAG,EAAEA,GAAG;IACRQ,MAAM,EAAE;EACV,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,SAASV,aAAa,EAAEnB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}