{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhruv\\\\OneDrive\\\\Documents\\\\reactt\\\\portfolio\\\\src\\\\components\\\\Map.jsx\";\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography, Annotation, ZoomableGroup } from \"react-simple-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    projection: \"geoAzimuthalEqualArea\",\n    projectionConfig: {\n      rotate: [-10.0, -52.0, 0],\n      center: [-5, -3],\n      scale: 1100\n    },\n    children: [/*#__PURE__*/_jsxDEV(Geographies, {\n      geography: \"/features.json\",\n      fill: \"#D6D6DA\",\n      stroke: \"#FFFFFF\",\n      strokeWidth: 0.5,\n      children: _ref => {\n        let {\n          geographies\n        } = _ref;\n        return geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Annotation, {\n      subject: [2.3522, 48.8566],\n      dx: -90,\n      dy: -30,\n      connectorProps: {\n        stroke: \"#FF5533\",\n        strokeWidth: 3,\n        strokeLinecap: \"round\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"text\", {\n        x: \"-8\",\n        textAnchor: \"end\",\n        alignmentBaseline: \"middle\",\n        fill: \"#F53\",\n        children: \"Paris\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","ComposableMap","Geographies","Geography","Annotation","ZoomableGroup","jsxDEV","_jsxDEV","Map","projection","projectionConfig","rotate","center","scale","children","geography","fill","stroke","strokeWidth","_ref","geographies","map","geo","rsmKey","fileName","_jsxFileName","lineNumber","columnNumber","subject","dx","dy","connectorProps","strokeLinecap","x","textAnchor","alignmentBaseline","_c","$RefreshReg$"],"sources":["C:/Users/Dhruv/OneDrive/Documents/reactt/portfolio/src/components/Map.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Annotation,\r\n  ZoomableGroup\r\n} from \"react-simple-maps\";\r\n\r\nconst Map = () => {\r\n  return (\r\n    <ComposableMap\r\n      projection=\"geoAzimuthalEqualArea\"\r\n      projectionConfig={{\r\n        rotate: [-10.0, -52.0, 0],\r\n        center: [-5, -3],\r\n        scale: 1100\r\n      }}\r\n    >\r\n      <Geographies\r\n        geography=\"/features.json\"\r\n        fill=\"#D6D6DA\"\r\n        stroke=\"#FFFFFF\"\r\n        strokeWidth={0.5}\r\n      >\r\n        {({ geographies }) =>\r\n          geographies.map((geo) => (\r\n            <Geography key={geo.rsmKey} geography={geo} />\r\n          ))\r\n        }\r\n      </Geographies>\r\n      <Annotation\r\n        subject={[2.3522, 48.8566]}\r\n        dx={-90}\r\n        dy={-30}\r\n        connectorProps={{\r\n          stroke: \"#FF5533\",\r\n          strokeWidth: 3,\r\n          strokeLinecap: \"round\"\r\n        }}\r\n      >\r\n        <text x=\"-8\" textAnchor=\"end\" alignmentBaseline=\"middle\" fill=\"#F53\">\r\n          {\"Paris\"}\r\n        </text>\r\n      </Annotation>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,aAAa,EACbC,WAAW,EACXC,SAAS,EACTC,UAAU,EACVC,aAAa,QACR,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACED,OAAA,CAACN,aAAa;IACZQ,UAAU,EAAC,uBAAuB;IAClCC,gBAAgB,EAAE;MAChBC,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;MACzBC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAChBC,KAAK,EAAE;IACT,CAAE;IAAAC,QAAA,gBAEFP,OAAA,CAACL,WAAW;MACVa,SAAS,EAAC,gBAAgB;MAC1BC,IAAI,EAAC,SAAS;MACdC,MAAM,EAAC,SAAS;MAChBC,WAAW,EAAE,GAAI;MAAAJ,QAAA,EAEhBK,IAAA;QAAA,IAAC;UAAEC;QAAY,CAAC,GAAAD,IAAA;QAAA,OACfC,WAAW,CAACC,GAAG,CAAEC,GAAG,iBAClBf,OAAA,CAACJ,SAAS;UAAkBY,SAAS,EAAEO;QAAI,GAA3BA,GAAG,CAACC,MAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAC9C,CAAC;MAAA;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEO,CAAC,eACdpB,OAAA,CAACH,UAAU;MACTwB,OAAO,EAAE,CAAC,MAAM,EAAE,OAAO,CAAE;MAC3BC,EAAE,EAAE,CAAC,EAAG;MACRC,EAAE,EAAE,CAAC,EAAG;MACRC,cAAc,EAAE;QACdd,MAAM,EAAE,SAAS;QACjBC,WAAW,EAAE,CAAC;QACdc,aAAa,EAAE;MACjB,CAAE;MAAAlB,QAAA,eAEFP,OAAA;QAAM0B,CAAC,EAAC,IAAI;QAACC,UAAU,EAAC,KAAK;QAACC,iBAAiB,EAAC,QAAQ;QAACnB,IAAI,EAAC,MAAM;QAAAF,QAAA,EACjE;MAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEpB,CAAC;AAACS,EAAA,GAtCI5B,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}