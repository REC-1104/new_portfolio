{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"debug\", \"depthTest\", \"polygonOffsetFactor\", \"map\", \"mesh\", \"children\", \"position\", \"rotation\", \"scale\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { applyProps } from '@react-three/fiber';\nimport { DecalGeometry } from 'three-stdlib';\nfunction isArray(vec) {\n  return Array.isArray(vec);\n}\nfunction vecToArray() {\n  var vec = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0, 0];\n  if (isArray(vec)) {\n    return vec;\n  } else if (vec instanceof THREE.Vector3 || vec instanceof THREE.Euler) {\n    return [vec.x, vec.y, vec.z];\n  } else {\n    return [vec, vec, vec];\n  }\n}\nvar Decal = /*@__PURE__*/React.forwardRef(function Decal(_ref, forwardRef) {\n  var debug = _ref.debug,\n    _ref$depthTest = _ref.depthTest,\n    depthTest = _ref$depthTest === void 0 ? false : _ref$depthTest,\n    _ref$polygonOffsetFac = _ref.polygonOffsetFactor,\n    polygonOffsetFactor = _ref$polygonOffsetFac === void 0 ? -10 : _ref$polygonOffsetFac,\n    map = _ref.map,\n    mesh = _ref.mesh,\n    children = _ref.children,\n    position = _ref.position,\n    rotation = _ref.rotation,\n    scale = _ref.scale,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var ref = React.useRef(null);\n  React.useImperativeHandle(forwardRef, function () {\n    return ref.current;\n  });\n  var helper = React.useRef(null);\n  React.useLayoutEffect(function () {\n    var parent = (mesh == null ? void 0 : mesh.current) || ref.current.parent;\n    var target = ref.current;\n    if (!(parent instanceof THREE.Mesh)) {\n      throw new Error('Decal must have a Mesh as parent or specify its \"mesh\" prop');\n    }\n    var state = {\n      position: new THREE.Vector3(),\n      rotation: new THREE.Euler(),\n      scale: new THREE.Vector3(1, 1, 1)\n    };\n    if (parent) {\n      applyProps(state, {\n        position: position,\n        scale: scale\n      });\n\n      // Zero out the parents matrix world for this operation\n      var matrixWorld = parent.matrixWorld.clone();\n      parent.matrixWorld.identity();\n      if (!rotation || typeof rotation === 'number') {\n        var o = new THREE.Object3D();\n        o.position.copy(state.position);\n        o.lookAt(parent.position);\n        if (typeof rotation === 'number') o.rotateZ(rotation);\n        applyProps(state, {\n          rotation: o.rotation\n        });\n      } else {\n        applyProps(state, {\n          rotation: rotation\n        });\n      }\n      target.geometry = new DecalGeometry(parent, state.position, state.rotation, state.scale);\n      if (helper.current) {\n        applyProps(helper.current, state);\n        // Prevent the helpers from blocking rays\n        helper.current.traverse(function (child) {\n          return child.raycast = function () {\n            return null;\n          };\n        });\n      }\n      // Reset parents matix-world\n      parent.matrixWorld = matrixWorld;\n      return function () {\n        target.geometry.dispose();\n      };\n    }\n  }, [mesh].concat(_toConsumableArray(vecToArray(position)), _toConsumableArray(vecToArray(scale)), _toConsumableArray(vecToArray(rotation))));\n\n  // <meshStandardMaterial transparent polygonOffset polygonOffsetFactor={-10} {...props} />}\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    \"material-transparent\": true,\n    \"material-polygonOffset\": true,\n    \"material-polygonOffsetFactor\": polygonOffsetFactor,\n    \"material-depthTest\": depthTest,\n    \"material-map\": map\n  }, props), children, debug && /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: helper\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", null), /*#__PURE__*/React.createElement(\"meshNormalMaterial\", {\n    wireframe: true\n  }), /*#__PURE__*/React.createElement(\"axesHelper\", null)));\n});\nexport { Decal };","map":{"version":3,"names":["_extends","React","THREE","applyProps","DecalGeometry","isArray","vec","Array","vecToArray","arguments","length","undefined","Vector3","Euler","x","y","z","Decal","forwardRef","_ref","debug","_ref$depthTest","depthTest","_ref$polygonOffsetFac","polygonOffsetFactor","map","mesh","children","position","rotation","scale","props","_objectWithoutProperties","_excluded","ref","useRef","useImperativeHandle","current","helper","useLayoutEffect","parent","target","Mesh","Error","state","matrixWorld","clone","identity","o","Object3D","copy","lookAt","rotateZ","geometry","traverse","child","raycast","dispose","concat","_toConsumableArray","createElement","wireframe"],"sources":["C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@react-three/drei/core/Decal.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { applyProps } from '@react-three/fiber';\nimport { DecalGeometry } from 'three-stdlib';\n\nfunction isArray(vec) {\n  return Array.isArray(vec);\n}\nfunction vecToArray(vec = [0, 0, 0]) {\n  if (isArray(vec)) {\n    return vec;\n  } else if (vec instanceof THREE.Vector3 || vec instanceof THREE.Euler) {\n    return [vec.x, vec.y, vec.z];\n  } else {\n    return [vec, vec, vec];\n  }\n}\nconst Decal = /*@__PURE__*/React.forwardRef(function Decal({\n  debug,\n  depthTest = false,\n  polygonOffsetFactor = -10,\n  map,\n  mesh,\n  children,\n  position,\n  rotation,\n  scale,\n  ...props\n}, forwardRef) {\n  const ref = React.useRef(null);\n  React.useImperativeHandle(forwardRef, () => ref.current);\n  const helper = React.useRef(null);\n  React.useLayoutEffect(() => {\n    const parent = (mesh == null ? void 0 : mesh.current) || ref.current.parent;\n    const target = ref.current;\n    if (!(parent instanceof THREE.Mesh)) {\n      throw new Error('Decal must have a Mesh as parent or specify its \"mesh\" prop');\n    }\n    const state = {\n      position: new THREE.Vector3(),\n      rotation: new THREE.Euler(),\n      scale: new THREE.Vector3(1, 1, 1)\n    };\n    if (parent) {\n      applyProps(state, {\n        position,\n        scale\n      });\n\n      // Zero out the parents matrix world for this operation\n      const matrixWorld = parent.matrixWorld.clone();\n      parent.matrixWorld.identity();\n      if (!rotation || typeof rotation === 'number') {\n        const o = new THREE.Object3D();\n        o.position.copy(state.position);\n        o.lookAt(parent.position);\n        if (typeof rotation === 'number') o.rotateZ(rotation);\n        applyProps(state, {\n          rotation: o.rotation\n        });\n      } else {\n        applyProps(state, {\n          rotation\n        });\n      }\n      target.geometry = new DecalGeometry(parent, state.position, state.rotation, state.scale);\n      if (helper.current) {\n        applyProps(helper.current, state);\n        // Prevent the helpers from blocking rays\n        helper.current.traverse(child => child.raycast = () => null);\n      }\n      // Reset parents matix-world\n      parent.matrixWorld = matrixWorld;\n      return () => {\n        target.geometry.dispose();\n      };\n    }\n  }, [mesh, ...vecToArray(position), ...vecToArray(scale), ...vecToArray(rotation)]);\n\n  // <meshStandardMaterial transparent polygonOffset polygonOffsetFactor={-10} {...props} />}\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    \"material-transparent\": true,\n    \"material-polygonOffset\": true,\n    \"material-polygonOffsetFactor\": polygonOffsetFactor,\n    \"material-depthTest\": depthTest,\n    \"material-map\": map\n  }, props), children, debug && /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: helper\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", null), /*#__PURE__*/React.createElement(\"meshNormalMaterial\", {\n    wireframe: true\n  }), /*#__PURE__*/React.createElement(\"axesHelper\", null)));\n});\n\nexport { Decal };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}