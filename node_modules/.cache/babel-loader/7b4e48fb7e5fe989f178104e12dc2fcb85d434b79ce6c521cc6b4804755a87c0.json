{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _objectWithoutProperties from \"C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\", \"color\", \"segments\", \"scale\", \"zoom\", \"grayscale\", \"opacity\", \"texture\", \"toneMapped\", \"transparent\"],\n  _excluded2 = [\"url\"],\n  _excluded3 = [\"url\"];\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useTexture } from './useTexture.js';\nimport { version } from '../helpers/constants.js';\n\n// {texture: THREE.Texture} XOR {url: string}\n\nvar ImageMaterialImpl = /*@__PURE__*/shaderMaterial({\n  color: /*@__PURE__*/new THREE.Color('white'),\n  scale: [1, 1],\n  imageBounds: [1, 1],\n  map: null,\n  zoom: 1,\n  grayscale: 0,\n  opacity: 1\n}, /* glsl */\"\\n  varying vec2 vUv;\\n  void main() {\\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\\n    vUv = uv;\\n  }\\n\", /* glsl */\"\\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\\n  varying vec2 vUv;\\n  uniform vec2 scale;\\n  uniform vec2 imageBounds;\\n  uniform vec3 color;\\n  uniform sampler2D map;\\n  uniform float zoom;\\n  uniform float grayscale;\\n  uniform float opacity;\\n  const vec3 luma = vec3(.299, 0.587, 0.114);\\n  vec4 toGrayscale(vec4 color, float intensity) {\\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\\n  }\\n  vec2 aspect(vec2 size) {\\n    return size / min(size.x, size.y);\\n  }\\n  void main() {\\n    vec2 s = aspect(scale);\\n    vec2 i = aspect(imageBounds);\\n    float rs = s.x / s.y;\\n    float ri = i.x / i.y;\\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\\n    vec2 uv = vUv * s / new + offset;\\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity), grayscale);\\n    \\n    #include <tonemapping_fragment>\\n    #include <\".concat(version >= 154 ? 'colorspace_fragment' : 'encodings_fragment', \">\\n  }\\n\"));\nvar ImageBase = /*@__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    color = _ref.color,\n    _ref$segments = _ref.segments,\n    segments = _ref$segments === void 0 ? 1 : _ref$segments,\n    _ref$scale = _ref.scale,\n    scale = _ref$scale === void 0 ? 1 : _ref$scale,\n    _ref$zoom = _ref.zoom,\n    zoom = _ref$zoom === void 0 ? 1 : _ref$zoom,\n    _ref$grayscale = _ref.grayscale,\n    grayscale = _ref$grayscale === void 0 ? 0 : _ref$grayscale,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    texture = _ref.texture,\n    toneMapped = _ref.toneMapped,\n    transparent = _ref.transparent,\n    props = _objectWithoutProperties(_ref, _excluded);\n  extend({\n    ImageMaterial: ImageMaterialImpl\n  });\n  var planeBounds = Array.isArray(scale) ? [scale[0], scale[1]] : [scale, scale];\n  var imageBounds = [texture.image.width, texture.image.height];\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    scale: Array.isArray(scale) ? [].concat(_toConsumableArray(scale), [1]) : scale\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [1, 1, segments, segments]\n  }), /*#__PURE__*/React.createElement(\"imageMaterial\", {\n    color: color,\n    map: texture,\n    zoom: zoom,\n    grayscale: grayscale,\n    opacity: opacity,\n    scale: planeBounds,\n    imageBounds: imageBounds,\n    toneMapped: toneMapped,\n    transparent: transparent\n  }), children);\n});\nvar ImageWithUrl = /*@__PURE__*/React.forwardRef(function (_ref2, ref) {\n  var url = _ref2.url,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  var texture = useTexture(url);\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    texture: texture,\n    ref: ref\n  }));\n});\nvar ImageWithTexture = /*@__PURE__*/React.forwardRef(function (_ref3, ref) {\n  var _url = _ref3.url,\n    props = _objectWithoutProperties(_ref3, _excluded3);\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    ref: ref\n  }));\n});\nvar Image = /*@__PURE__*/React.forwardRef(function (props, ref) {\n  if (props.url) return /*#__PURE__*/React.createElement(ImageWithUrl, _extends({}, props, {\n    ref: ref\n  }));else if (props.texture) return /*#__PURE__*/React.createElement(ImageWithTexture, _extends({}, props, {\n    ref: ref\n  }));else throw new Error('<Image /> requires a url or texture');\n});\nexport { Image };","map":{"version":3,"names":["_extends","React","THREE","extend","shaderMaterial","useTexture","version","ImageMaterialImpl","color","Color","scale","imageBounds","map","zoom","grayscale","opacity","concat","ImageBase","forwardRef","_ref","ref","children","_ref$segments","segments","_ref$scale","_ref$zoom","_ref$grayscale","_ref$opacity","texture","toneMapped","transparent","props","_objectWithoutProperties","_excluded","ImageMaterial","planeBounds","Array","isArray","image","width","height","createElement","_toConsumableArray","args","ImageWithUrl","_ref2","url","_excluded2","ImageWithTexture","_ref3","_url","_excluded3","Image","Error"],"sources":["C:/Users/Dhruv/OneDrive/Documents/GitHub/new_portfolio/node_modules/@react-three/drei/core/Image.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { extend } from '@react-three/fiber';\nimport { shaderMaterial } from './shaderMaterial.js';\nimport { useTexture } from './useTexture.js';\nimport { version } from '../helpers/constants.js';\n\n// {texture: THREE.Texture} XOR {url: string}\n\nconst ImageMaterialImpl = /*@__PURE__*/shaderMaterial({\n  color: /*@__PURE__*/new THREE.Color('white'),\n  scale: [1, 1],\n  imageBounds: [1, 1],\n  map: null,\n  zoom: 1,\n  grayscale: 0,\n  opacity: 1\n}, /* glsl */`\n  varying vec2 vUv;\n  void main() {\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n    vUv = uv;\n  }\n`, /* glsl */`\n  // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n  varying vec2 vUv;\n  uniform vec2 scale;\n  uniform vec2 imageBounds;\n  uniform vec3 color;\n  uniform sampler2D map;\n  uniform float zoom;\n  uniform float grayscale;\n  uniform float opacity;\n  const vec3 luma = vec3(.299, 0.587, 0.114);\n  vec4 toGrayscale(vec4 color, float intensity) {\n    return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\n  }\n  vec2 aspect(vec2 size) {\n    return size / min(size.x, size.y);\n  }\n  void main() {\n    vec2 s = aspect(scale);\n    vec2 i = aspect(imageBounds);\n    float rs = s.x / s.y;\n    float ri = i.x / i.y;\n    vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n    vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n    vec2 uv = vUv * s / new + offset;\n    vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n    gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity), grayscale);\n    \n    #include <tonemapping_fragment>\n    #include <${version >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>\n  }\n`);\nconst ImageBase = /*@__PURE__*/React.forwardRef(({\n  children,\n  color,\n  segments = 1,\n  scale = 1,\n  zoom = 1,\n  grayscale = 0,\n  opacity = 1,\n  texture,\n  toneMapped,\n  transparent,\n  ...props\n}, ref) => {\n  extend({\n    ImageMaterial: ImageMaterialImpl\n  });\n  const planeBounds = Array.isArray(scale) ? [scale[0], scale[1]] : [scale, scale];\n  const imageBounds = [texture.image.width, texture.image.height];\n  return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n    ref: ref,\n    scale: Array.isArray(scale) ? [...scale, 1] : scale\n  }, props), /*#__PURE__*/React.createElement(\"planeGeometry\", {\n    args: [1, 1, segments, segments]\n  }), /*#__PURE__*/React.createElement(\"imageMaterial\", {\n    color: color,\n    map: texture,\n    zoom: zoom,\n    grayscale: grayscale,\n    opacity: opacity,\n    scale: planeBounds,\n    imageBounds: imageBounds,\n    toneMapped: toneMapped,\n    transparent: transparent\n  }), children);\n});\nconst ImageWithUrl = /*@__PURE__*/React.forwardRef(({\n  url,\n  ...props\n}, ref) => {\n  const texture = useTexture(url);\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    texture: texture,\n    ref: ref\n  }));\n});\nconst ImageWithTexture = /*@__PURE__*/React.forwardRef(({\n  url: _url,\n  ...props\n}, ref) => {\n  return /*#__PURE__*/React.createElement(ImageBase, _extends({}, props, {\n    ref: ref\n  }));\n});\nconst Image = /*@__PURE__*/React.forwardRef((props, ref) => {\n  if (props.url) return /*#__PURE__*/React.createElement(ImageWithUrl, _extends({}, props, {\n    ref: ref\n  }));else if (props.texture) return /*#__PURE__*/React.createElement(ImageWithTexture, _extends({}, props, {\n    ref: ref\n  }));else throw new Error('<Image /> requires a url or texture');\n});\n\nexport { Image };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}